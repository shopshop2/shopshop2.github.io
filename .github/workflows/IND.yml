name: 'IND'
on:
 schedule:
   - cron: '25 19 * * *'
 workflow_dispatch:
jobs:
 submit-urls:
   runs-on: ubuntu-latest
   permissions:
     contents: read
   steps:
     - name: Checkout repository
       uses: actions/checkout@v4
       with:
         fetch-depth: 0

     - name: Get modified files
       run: |
         echo "Getting files from recent batch upload commit..."
         CHANGED_FILES=$(git log -1 adff2f43 --name-only --pretty="" | grep -E "^_posts/.*\.md$" || true)
         
         if [ ! -z "$CHANGED_FILES" ]; then
           python3 -c 'import os,json,urllib.parse,sys; def decode_url_path(path): return urllib.parse.unquote(path)[len("_posts/"):].split(".md")[0][11:] if urllib.parse.unquote(path).startswith("_posts/") and urllib.parse.unquote(path).startswith("2024-03-") else path; changed_files=os.environ.get("CHANGED_FILES","").splitlines(); url_list=[f"https://shopshop2.github.io/shopping/{"-".join(filter(None, decode_url_path(file).split("-")))}/" for file in changed_files if file.strip()]; [print(f"Processing: {url}") for url in url_list]; data={"host":"shopshop2.github.io","key":"87ae650ca3ec4b2daec3bee8fa7ac2e3","urlList":url_list,"keyLocation":"https://shopshop2.github.io/87ae650ca3ec4b2daec3bee8fa7ac2e3.txt"} if url_list else None; json.dump(data, open("/tmp/indexnow_data.json", "w", encoding="utf-8"), ensure_ascii=False, indent=2) if data else (print("No valid URLs found to process") or sys.exit(1))'

           if [ -f "/tmp/indexnow_data.json" ]; then
             response=$(curl -s -w "\nHTTP Status: %{http_code}" -X POST "https://api.indexnow.org/indexnow" \
               -H "Content-Type: application/json" \
               -d @/tmp/indexnow_data.json)
             
             echo "IndexNow API Response:"
             echo "$response"
             
             if echo "$response" | grep -q "HTTP Status: 200"; then
               echo "URLs successfully submitted to search engines!"
             else
               echo "Error submitting URLs. Please check the response above."
               exit 1
             fi
           fi
         else
           echo "No markdown files found in the batch upload commit"
           exit 0
         fi
       env:
         CHANGED_FILES: "$CHANGED_FILES"
