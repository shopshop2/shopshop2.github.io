name: 'IND'
on:
 schedule:
   - cron: '25 19 * * *'  # UTC 19:25 = KST 04:25
 workflow_dispatch:
jobs:
 submit-urls:
   runs-on: ubuntu-latest
   permissions:
     contents: read
   steps:
     - name: Debug Info
       run: |
         echo "GitHub Context:"
         echo "  Repository: ${{ github.repository }}"
         echo "  Ref: ${{ github.ref }}"
         echo "  Event: ${{ github.event_name }}"
         echo "Time Info:"
         echo "  UTC: $(date -u)"
         echo "  KST: $(TZ='Asia/Seoul' date)"
     - name: Checkout repository
       uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: Install Python
       uses: actions/setup-python@v4
       with:
         python-version: '3.x'
     - name: Get changed files and submit URLs
       run: |
         echo "Checking recent commits:"
         git log --since="24 hours ago" --name-only --pretty=format:"%h - %an, %ar : %s"
         
         # Python script to handle URL conversion
         python3 - <<EOF
         import os
         import subprocess
         import json
         import urllib.parse
         
         # Get changed files from git log
         cmd = "git log --since='24 hours ago' --name-only --pretty=format:"
         changed_files = subprocess.check_output(cmd, shell=True).decode('utf-8').strip().split('\n')
         
         # Filter markdown files from _posts directory
         md_files = [f for f in changed_files if f.startswith('_posts/') and f.endswith('.md')]
         
         if md_files:
             url_list = []
             seen_urls = set()
             
             for file in md_files:
                 # Extract filename without path and date prefix
                 filename = os.path.basename(file)
                 # Remove date prefix (YYYY-MM-DD-)
                 url_path = filename[11:].replace('.md', '')
                 # Remove double hyphens and trailing hyphens
                 url_path = url_path.replace('--', '-').rstrip('-')
                 
                 # Create full URL
                 url = f"https://shopshop2.github.io/shopping/{url_path}/"
                 
                 if url not in seen_urls:
                     seen_urls.add(url)
                     url_list.append(url)
                     print(f"Processing: {url}")
             
             # Prepare API request
             data = {
                 "host": "shopshop2.github.io",
                 "key": "87ae650ca3ec4b2daec3bee8fa7ac2e3",
                 "urlList": url_list,
                 "keyLocation": "https://shopshop2.github.io/87ae650ca3ec4b2daec3bee8fa7ac2e3.txt"
             }
             
             # Save data for curl
             with open('/tmp/indexnow_data.json', 'w', encoding='utf-8') as f:
                 json.dump(data, f, ensure_ascii=False)
             
             print("URL List prepared successfully")
         else:
             print("No markdown files found in _posts directory in the last 24 hours")
             exit(0)
         EOF
         
         if [ -f "/tmp/indexnow_data.json" ]; then
           response=$(curl -s -w "\nHTTP Status: %{http_code}" -X POST "https://api.indexnow.org/indexnow" \
             -H "Content-Type: application/json" \
             -d @/tmp/indexnow_data.json)
           
           echo "IndexNow API Response:"
           echo "$response"
           
           if echo "$response" | grep -q "HTTP Status: 200"; then
             echo "URLs successfully submitted to search engines!"
           else
             echo "Error submitting URLs. Please check the response above."
             exit 1
           fi
         fi
     - name: Report status
       if: always()
       run: |
         if [ "${{ job.status }}" = "success" ]; then
           echo "✅ IndexNow submission completed successfully"
         else
           echo "❌ IndexNow submission failed"
         fi
         echo "Workflow completed at: $(date)"
